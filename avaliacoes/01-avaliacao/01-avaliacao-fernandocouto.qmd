---
title: "Resolucão da Avaliação 1"
subtitle: "Introdução à Ciência de Dados - 2025 <br> Mestrado em Administração"
author: "Fernando Ribeiro do Couto"
title-block-banner: "#27445C"
format:
  html:
    embed-resources: true
    page-layout: article
    toc: true
    toc-location: left
lang: "pt"
date: 2025-05-29
date-format: long
execute: 
  eval: true
  echo: true
  warning: false
  message: false
crossref:
  fig-prefix: 'Fig.'
  tbl-prefix: 'Tab.'
---


```{r}
#| label: setup
#| echo: false

# configura a exibição de números
options(digits = 3, scipen = 99)

# Carrega os pacotes necessários
library(here)       # Para utilizar caminhos relativos no projeto
library(tidyverse)  # Metapacote que inclui reador, dplyr, tidyr...
library(farr)       # Para usar as 3 data frames

# Carrega as df do pacote farr

## carrega a df aus_banks
data("aus_banks")

## carrega a df aus_bank_funds
data("aus_bank_funds")

## carrega a df aus_bank_rets
data("aus_bank_rets")
```



## Questão 1 


**a)** 

Porque, com base em processos pouco automatizados a responsabilidade fica muito
voltada ao colaborador, por exemplo, no meu dia a dia fazendas que não tem um
sistema padrão, os dados ficam armazenados em planilhas de excel onde, 
geralmente apenas uma pessoa é capaz de operá-las, essa pessoa saindo da 
empresa corre o risco de perder informações importantes, sem dizer que no
inumeros retrabalos podem acontecer porque os processos não ficam claros e cada 
um pode fazer uma forma. Agora quanto à pesquisa acredito que seja uma situação 
mais complicada, pois fazer uma pesquisa que não seja replicavél é muito grave.


**b)** 

No meu ponto de vista os processos da metodologia podem dar à pesquisa e a
empresa uma agilidade muito considerável, e um ganho enorme em padronização e
automação de processos, a possilibilidade de entender o passo a passo dado em
cada etapa, com isso a possibilidade de replicação do processo.


**c)** 

Uma grande contribuição seria com relação a transparência dos dados, onde quando
for necessário tem-se condição de fazer uma auditoria nos processos
- facilidade de treinamento de novos colaboradores 
- mais confiabilidade a empresa/pesquisa
- redução de erros pois passa ater um processo claro e estruturado
- diminuição do retrabalho, aumentando a eficiência da mão-de-obra





## Questão 2


**a)**

```{r}
# Importar o arquivo CSV usando here
caminho <- here::here("data/raw/dados_franco2022.csv")


## 1.2 Importa o arquivo com a função read_csv
dados_franco_2022 <- readr::read_csv(caminho)

```



**b)** 

```{r}

# Aplicar o pipeline para renomear as colunas
dados_franco_limpos <- dados_franco_2022 %>%
  rename(mes = data,
    indice_epu = EPU,
    indice_iem = IEM,
    icc_fec = ICCFEC,
    icc_fgv = ICCFGV)

# Verificar a estrutura dos dados renomeados
glimpse(dados_franco_limpos)

```


## Questão 3


**a)** 

```{r}
# Dados simulando relatório do BCB sobre patrimônio de referência
patrimonio_wide <- tribble(
  ~instituicao,              ~`2019`, ~`2020`, ~`2021`, ~`2022`, ~`2023`,
  "Itaú Unibanco",           186.4,    203.7,   218.9,   234.5,   251.2,
  "Banco do Brasil",         142.8,    156.3,   169.7,   182.1,   198.4,
  "Bradesco",                158.7,    171.2,   184.6,   197.8,   213.3,
  "Santander Brasil",         89.3,     96.7,   104.2,   112.8,   121.5,
  "Caixa Econômica Federal", 118.6,    127.9,   138.4,   149.7,   162.3,
  "BTG Pactual",              28.4,     32.1,    36.8,    42.3,    48.7
)

# Visualiza os dados em formato amplo
patrimonio_wide
```


```{r}
# Pipeline de transformação de formato amplo para formato longo
patrimonio_longo <- patrimonio_wide %>%
  pivot_longer(
    cols = `2019`:`2023`,
   names_to = "ano",
    values_to = "patrimonio_referencia"
  ) %>%
 mutate(ano = as.numeric(ano)) %>%
  arrange(instituicao, ano)

# Exibe o resultado completo da transformação
patrimonio_longo
```



**b.1):**

```{r}

# Exibe o resultado completo da transformação
patrimonio_longo

```


**b.2):** 

No patrimonio longo tem 30 observações

**b.3):**

Tem 3 variaveis sendo elas: 
instituicao, ano e patrimonio_referencia






## Questão 4


**a)** 

```{r}
# Pipeline para combinar aus_banks e aus_bank_funds
dados_combinados <- aus_bank_funds %>%
  # join para manter todas as observações de aus_bank_funds
  left_join(aus_banks, by = "gvkey")%>%
  # Remove observações com valores ausentes
  drop_na() %>%
  # Seleciona apenas as variáveis solicitadas
  select(co_name, ticker, datadate, at, ceq) %>%
  # Ordena por nome do banco e depois por data
  arrange(co_name, datadate)

# Exibe as primeiras 10 linhas
head(dados_combinados, 10)
```




**b)** 

```{r}
# Pipeline para calcular equity ratio e criar ranking
ranking_equity <- dados_combinados %>%
  # Calcula o equity ratio (proporção patrimônio líquido / ativo total)
  mutate(equity_ratio = ceq / at) %>%
  # Agrupa os dados por banco
 group_by(co_name)  %>%
  # Calcula o equity ratio médio de cada banco 
  summarise(equity_ratio_medio = mean(equity_ratio)) %>%
  # Ordena do maior para o menor equity ratio médio
 arrange(desc(equity_ratio_medio))

# Exibe a tabela completa do ranking
ranking_equity
```

```{r}
# Exibe o banco que apresentou maior Equity
head(ranking_equity, 1)

```




## Questão 5


**a)** 

```{r}
# Pipeline para integrar as três tabelas
dados_integrados <- aus_bank_funds %>%
  # Primeiro join: adiciona informações dos bancos
  inner_join(aus_banks, by = "gvkey") %>%
  # Segundo join: adiciona dados de retornos das ações
   inner_join(aus_bank_rets, by = c("gvkey", "datadate")) %>%
  # Remove possíveis valores ausentes para garantir dados completos
  drop_na()

# Verifica a estrutura dos dados integrados
dplyr::glimpse(dados_integrados)
```




**b)** 

```{r}
# Calcula ativo total médio por banco
ativo_medio_bancos <- dados_integrados %>%
  group_by(co_name) %>%
  summarise(ativo_medio = mean(at, na.rm = TRUE)) %>%
  arrange(desc(ativo_medio))

# Exibe os resultados
ativo_medio_bancos
```




**c)** 

```{r}
# Pipeline completo integrando dados de ativo e retorno
analise_categorias <- dados_integrados %>%
  # Calcula ativo médio e retorno médio por banco
  group_by(co_name) %>%
  # Calcula ativo médio e retorno médio por banco
  summarise(ativo_medio = mean(at, na.rm = TRUE),
    retorno_medio = mean(ret, na.rm = TRUE)
  ) %>%
  # Cria categorias de tamanho usando case_when
  mutate(categoria_tamanho = case_when(
      ativo_medio < 50000 ~ "Pequeno",
      ativo_medio >= 50000 & ativo_medio <= 200000 ~ "Médio",
      ativo_medio > 200000 ~ "Grande"
    )
  )

# Exibe o resultado
analise_categorias

```







